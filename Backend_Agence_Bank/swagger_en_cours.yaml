swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: 1.0.0
  termsOfService: http://swagger.io/terms/
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes. Fields are optional.
          required: false
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /user/accounts:
    post:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Retrieve user accounts
      description: Fetch all accounts for the authenticated user
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/UserAccount'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /user/account/transactions:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Retrieve user transactions for the last month
      description: Fetch all transactions from the last month for the authenticated user
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/UserTransaction'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update transaction category and note
      description: Update category and add a note for a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  UserTransaction:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for the transaction.
      date:
        type: string
        format: date-time
        description: Date and time of the transaction.
      amount:
        type: number
        format: float
        description: Amount of the transaction.
      description:
        type: string
        description: Brief description of the transaction.
      category:
        type: string
        description: Category of the transaction (e.g., groceries, utilities).
      note:
        type: string
        description: Any additional notes or comments about the transaction.
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
        description: Updated category for the transaction.
      note:
        type: string
        description: Updated note or comment for the transaction.
  TransactionResponse:
    type: object
    properties:
      message:
        type: string
        description: Message indicating the result of the transaction update.
      updatedTransaction:
        $ref: '#/definitions/UserTransaction'
        description: Details of the updated transaction.
  UserAccount:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for the account.
      accountType:
        type: string
        description: Type of the account.
      balance:
        type: number
        format: float
        description: Current balance of the account.
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
        description: First name of the user.
      lastName:
        type: string
        description: Last name of the user.
      email:
        type: string
        format: email
        description: Email address of the user.
  Login:
    type: object
    properties:
      username:
        type: string
        description: Username for login.
      password:
        type: string
        format: password
        description: Password for login.
  LoginResponse:
    type: object
    properties:
      token:
        type: string
        description: JWT token for authentication.
  ApiResponse:
    type: object
    properties:
      message:
        type: string
        description: General response message.
      data:
        type: object
        description: Any additional data related to the response.
